plugins {
    id "java"
    id "idea"
    id "net.serenity-bdd.serenity-gradle-plugin" version "4.1.14"
    id "io.freefair.lombok" version "8.6"
}

java {
    sourceCompatibility = 21
    targetCompatibility = 21
}

idea {
    project {
        jdkName = "21"
        languageLevel = "21"
    }
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    google()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

test {
    systemProperties System.getProperties()
    systemProperty "file.encoding", "UTF-8"
    systemProperty "cucumber.filter.tags", System.getProperty("cucumber.filter.tags")
    systemProperty "cucumber.options", System.getProperty("cucumber.options")
    testLogging.showStandardStreams = true

    finalizedBy(aggregate)
}

jar {
    manifest {
        attributes(
                "Main-Class": "com.bookverse.development.packapps.apps.core.Start",
                "Built-By": "Santiago Moncada" + " (" + System.properties["user.name"] + ")",
                "Build-Revision": 3.0,
                "Created-By": "Gradle ${gradle.gradleVersion}",
                "Build-Jdk": "${System.properties["java.version"]} (${System.properties["java.vendor"]} ${System.properties["java.vm.version"]})",
                "Build-OS": "${System.properties["os.name"]} ${System.properties["os.arch"]} ${System.properties["os.version"]}"
        )
    }
}

sourceSets.main.resources.srcDirs = ["src/main/resources", "src/main/resources/images", "src/main/resources/data"]
sourceSets.main.resources.includes = ["**.png", "**.jpg", "**.gif", "**.properties"]

ext {
    serenityVersion = "4.1.20"
}

dependencies {
    implementation "net.serenity-bdd:serenity-screenplay:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-core:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-junit:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-cucumber:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-reports:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-ensure:${serenityVersion}"

    implementation "org.slf4j:slf4j-simple:2.0.9"
    implementation "commons-codec:commons-codec:1.16.0"
    implementation "org.apache.commons:commons-dbcp2:2.11.0"
    implementation "org.apache.commons:commons-pool2:2.12.0"
    implementation "com.itextpdf:itextpdf:5.5.13.3"
    implementation "com.sun.mail:jakarta.mail:2.0.1"
    implementation "com.jtattoo:JTattoo:1.6.13"
    implementation "com.mysql:mysql-connector-j:8.4.0"
    implementation "org.apache.poi:poi:5.2.5"
    implementation "net.sourceforge.tess4j:tess4j:5.11.0"
    implementation "net.datafaker:datafaker:2.0.2"
    implementation "com.google.zxing:core:3.5.2"
    implementation "com.google.zxing:javase:3.5.2"

    implementation(files("libs/Tess4J-5.11.0.jar"))
}

gradle.startParameter.continueOnFailure = true